version: '3.4'

services:
  nginx:
    build:
      context: ../nginx/
    container_name: wallet.local
    volumes:
      - ../.docker/https/localhost.crt:/etc/ssl/certs/localhost.crt:ro
      - ../.docker/https/localhost.key:/etc/ssl/private/localhost.key:ro
    links:
      - accounts-api
      - identity-server
      - wallet-spa
  accounts-api:
    image: ${DOCKER_REGISTRY-}accounts
    container_name: "accounts-api"
    build:
      context: ../accounts-api/
      dockerfile: src/WebApi/Dockerfile
    environment:
      - ASPNETCORE_URLS=https://+;http://+
      - ASPNETCORE_HTTPS_PORT=443
      - ASPNETCORE_BASEPATH=/accounts-api
      - ASPNETCORE_Kestrel__Certificates__Default__Password=MyCertificatePassword
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/localhost.pfx
      - PersistenceModule__DefaultConnection=Server=sql1;User Id=sa;Password=<YourStrong!Passw0rd>;Database=Accounts;
    volumes:
      - ../.docker/https:/https:ro
    depends_on:
      - sql1
      - accounts-api-seed
      - identity-server
  accounts-api-seed:
    container_name: "accounts-api-seed"
    build:
      context: ../accounts-api/
      dockerfile: ../accounts-api-seed/Dockerfile
    environment:
      - PersistenceModule__DefaultConnection=Server=sql1;User Id=sa;Password=<YourStrong!Passw0rd>;Database=Accounts;
    command: bash -c "/root/.dotnet/tools/dotnet-ef database update --project src/Infrastructure --startup-project src/WebApi"
    depends_on:
      - sql1
  identity-server:
    image: ${DOCKER_REGISTRY-}identityserver
    container_name: "identity-server"
    environment:
      - ASPNETCORE_URLS=https://+;http://+
      - ASPNETCORE_HTTPS_PORT=443
      - ASPNETCORE_BASEPATH=/identity-server
      - ASPNETCORE_Kestrel__Certificates__Default__Password=MyCertificatePassword
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/localhost.pfx
    volumes:
      - ../.docker/https:/https:ro
    build:
      context: ../
      dockerfile: identity-server/Dockerfile
  wallet-spa:
    image: ${DOCKER_REGISTRY-}wallet
    container_name: "wallet-spa"
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    build:
      context: ../wallet-spa/
  sql1:
    image: "mcr.microsoft.com/mssql/server:2019-latest"
    environment:
      SA_PASSWORD: "<YourStrong!Passw0rd>"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
